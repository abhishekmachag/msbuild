name: "Deploy to NuGet"

on:
  push:
    branches:
      - master
  workflow_dispatch:

env:
  # PROJECT_PATH: 'PasswordBoxMVVM/PasswordBoxMVVM.csproj'
  PACKAGE_OUTPUT_DIRECTORY: ${{ github.workspace }}\output
  NUGET_SOURCE_URL: 'https://api.nuget.org/v3/index.json'

jobs:
  deploy:
    name: 'Deploy'
    runs-on: 'windows-latest'
    steps:
    - name: 'Checkout'
      uses: actions/checkout@v3

    - name: 'Install dotnet'
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '3.1.x'

    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v1
    
    - name: Setup NuGet
      uses: NuGet/setup-nuget@v1  

    - name: Setup NuGet
      uses: NuGet/setup-nuget@v1  
      
    # - name: Clean solution
    #   working-directory: ${{ github.workspace }}
    #   run: msbuild /t:clean
      
    - name: Restore NuGet packages with msbuild
      working-directory: ${{ github.workspace }}
      run: nuget restore EFContextMock.sln
    
      
    - name: Build with msbuild
      working-directory: ${{ github.workspace }}
      run: msbuild.exe EFContextMock.sln /p:DeployOnBuild=true --no-restore --configuration Release"


    - name: 'Get Version'
      id: version
      uses: battila7/get-version-action@v2

    - name: 'Pack project'
      working-directory: ${{ github.workspace }}
      run: dotnet pack EFContextMock.sln --no-restore --no-build --configuration Release --include-symbols -p:PackageVersion=${{ steps.version.outputs.version-without-v }} --output ${{ env.PACKAGE_OUTPUT_DIRECTORY }}

    - name: 'Push package'
      run: dotnet nuget push ${{ env.PACKAGE_OUTPUT_DIRECTORY }}\*.nupkg -k ${{ secrets.GH_TOKEN }} -s ${{ env.NUGET_SOURCE_URL }}
